{"ast":null,"code":"import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(props) {\n  var _props$anchorOrigin = props.anchorOrigin,\n      anchorOriginProp = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'right'\n  } : _props$anchorOrigin,\n      badgeContentProp = props.badgeContent,\n      _props$invisible = props.invisible,\n      invisibleProp = _props$invisible === void 0 ? false : _props$invisible,\n      _props$max = props.max,\n      maxProp = _props$max === void 0 ? 99 : _props$max,\n      _props$showZero = props.showZero,\n      showZero = _props$showZero === void 0 ? false : _props$showZero,\n      _props$variant = props.variant,\n      variantProp = _props$variant === void 0 ? 'standard' : _props$variant;\n  var prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    badgeContent: badgeContentProp,\n    max: maxProp,\n    variant: variantProp\n  });\n  var invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  var _ref = invisible ? prevProps : props,\n      _ref$anchorOrigin = _ref.anchorOrigin,\n      anchorOrigin = _ref$anchorOrigin === void 0 ? anchorOriginProp : _ref$anchorOrigin,\n      badgeContent = _ref.badgeContent,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? maxProp : _ref$max,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? variantProp : _ref$variant;\n\n  var displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent && Number(badgeContent) > max ? \"\".concat(max, \"+\") : badgeContent;\n  }\n\n  return {\n    anchorOrigin: anchorOrigin,\n    badgeContent: badgeContent,\n    invisible: invisible,\n    max: max,\n    variant: variant,\n    displayValue: displayValue\n  };\n}","map":{"version":3,"sources":["C:/pproject-files/Cate/node_modules/@mui/base/BadgeUnstyled/useBadge.js"],"names":["usePreviousProps","useBadge","props","anchorOrigin","anchorOriginProp","vertical","horizontal","badgeContentProp","badgeContent","invisible","invisibleProp","max","maxProp","showZero","variant","variantProp","prevProps","displayValue","Number"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,YAAjC;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,4BAWlCA,KAXkC,CAEpCC,YAFoC;AAAA,MAEtBC,gBAFsB,oCAEH;AAC/BC,IAAAA,QAAQ,EAAE,KADqB;AAE/BC,IAAAA,UAAU,EAAE;AAFmB,GAFG;AAAA,MAMtBC,gBANsB,GAWlCL,KAXkC,CAMpCM,YANoC;AAAA,yBAWlCN,KAXkC,CAOpCO,SAPoC;AAAA,MAOzBC,aAPyB,iCAOT,KAPS;AAAA,mBAWlCR,KAXkC,CAQpCS,GARoC;AAAA,MAQ/BC,OAR+B,2BAQrB,EARqB;AAAA,wBAWlCV,KAXkC,CASpCW,QAToC;AAAA,MASpCA,QAToC,gCASzB,KATyB;AAAA,uBAWlCX,KAXkC,CAUpCY,OAVoC;AAAA,MAU3BC,WAV2B,+BAUb,UAVa;AAYtC,MAAMC,SAAS,GAAGhB,gBAAgB,CAAC;AACjCG,IAAAA,YAAY,EAAEC,gBADmB;AAEjCI,IAAAA,YAAY,EAAED,gBAFmB;AAGjCI,IAAAA,GAAG,EAAEC,OAH4B;AAIjCE,IAAAA,OAAO,EAAEC;AAJwB,GAAD,CAAlC;AAMA,MAAIN,SAAS,GAAGC,aAAhB;;AAEA,MAAIA,aAAa,KAAK,KAAlB,KAA4BH,gBAAgB,KAAK,CAArB,IAA0B,CAACM,QAA3B,IAAuCN,gBAAgB,IAAI,IAApB,IAA4BQ,WAAW,KAAK,KAA/G,CAAJ,EAA2H;AACzHN,IAAAA,SAAS,GAAG,IAAZ;AACD;;AAtBqC,aA6BlCA,SAAS,GAAGO,SAAH,GAAed,KA7BU;AAAA,+BAyBpCC,YAzBoC;AAAA,MAyBpCA,YAzBoC,kCAyBrBC,gBAzBqB;AAAA,MA0BpCI,YA1BoC,QA0BpCA,YA1BoC;AAAA,sBA2BpCG,GA3BoC;AAAA,MA2BpCA,GA3BoC,yBA2B9BC,OA3B8B;AAAA,0BA4BpCE,OA5BoC;AAAA,MA4BpCA,OA5BoC,6BA4B1BC,WA5B0B;;AA8BtC,MAAIE,YAAY,GAAG,EAAnB;;AAEA,MAAIH,OAAO,KAAK,KAAhB,EAAuB;AACrBG,IAAAA,YAAY,GAAGT,YAAY,IAAIU,MAAM,CAACV,YAAD,CAAN,GAAuBG,GAAvC,aAAgDA,GAAhD,SAAyDH,YAAxE;AACD;;AAED,SAAO;AACLL,IAAAA,YAAY,EAAZA,YADK;AAELK,IAAAA,YAAY,EAAZA,YAFK;AAGLC,IAAAA,SAAS,EAATA,SAHK;AAILE,IAAAA,GAAG,EAAHA,GAJK;AAKLG,IAAAA,OAAO,EAAPA,OALK;AAMLG,IAAAA,YAAY,EAAZA;AANK,GAAP;AAQD","sourcesContent":["import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(props) {\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props;\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    badgeContent: badgeContentProp,\n    max: maxProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    anchorOrigin = anchorOriginProp,\n    badgeContent,\n    max = maxProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  let displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  }\n\n  return {\n    anchorOrigin,\n    badgeContent,\n    invisible,\n    max,\n    variant,\n    displayValue\n  };\n}"]},"metadata":{},"sourceType":"module"}